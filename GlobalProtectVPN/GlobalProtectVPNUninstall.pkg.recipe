<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
   <dict>
      <key>Description</key>
      <string>Downloads the current release version of the Global Protect VPN client and builds an installer package which uninstalls Global Protect.</string>
      <key>Identifier</key>
      <string>corp.sap.maccoe.pkg.GlobalProtect.uninstall</string>
      <key>Input</key>
      <dict>
         <key>NAME</key>
         <string>GlobalProtect</string>
         <key>PACKAGER</key>
         <string>SAPCorp</string>
         <key>VENDOR</key>
         <string>PaloAlto</string>
         <key>SOFTWARETITLE1</key>
         <string>GlobalProtect</string>
         <key>SOFTWARETITLE2</key>
         <string>Uninstaller</string>
      </dict>
      <key>MinimumVersion</key>
      <string>1.0.0</string>
      <key>ParentRecipe</key>
      <string>corp.sap.maccoe.download.GlobalProtect</string>
      <key>Process</key>
      <array>
         <dict>
            <key>Arguments</key>
            <dict>
               <key>pattern</key>
               <string>%RECIPE_CACHE_DIR%/%VENDOR%/*.pkg</string>
            </dict>
            <key>Processor</key>
            <string>FileFinder</string>
         </dict>
         <dict>
            <key>Arguments</key>
            <dict>
               <key>destination_path</key>
               <string>%RECIPE_CACHE_DIR%/unpack</string>
               <key>flat_pkg_path</key>
               <string>%found_filename%</string>
            </dict>
            <key>Processor</key>
            <string>FlatPkgUnpacker</string>
         </dict>
         <dict>
            <key>Arguments</key>
            <dict>
               <key>pattern</key>
               <string>%RECIPE_CACHE_DIR%/unpack/*gp.pkg</string>
            </dict>
            <key>Processor</key>
            <string>FileFinder</string>
         </dict>
         <dict>
            <key>Arguments</key>
            <dict>
               <key>destination_path</key>
               <string>%RECIPE_CACHE_DIR%/payload/GlobalProtect.app</string>
               <key>pkg_payload_path</key>
               <string>%found_filename%/Payload</string>
            </dict>
            <key>Processor</key>
            <string>PkgPayloadUnpacker</string>
         </dict>
         <dict>
            <key>Arguments</key>
            <dict>
               <key>input_plist_path</key>
               <string>%RECIPE_CACHE_DIR%/payload/GlobalProtect.app/Contents/Info.plist</string>
               <key>plist_version_key</key>
               <string>CFBundleShortVersionString</string>
            </dict>
            <key>Processor</key>
            <string>Versioner</string>
         </dict>
         <dict>
            <key>Processor</key>
            <string>PkgRootCreator</string>
            <key>Arguments</key>
            <dict>
               <key>pkgroot</key>
               <string>%RECIPE_CACHE_DIR%/pkgroot</string>
               <key>pkgdirs</key>
               <dict>
                  <key>Scripts</key>
                  <string>0755</string>
               </dict>
            </dict>
         </dict>
         <dict>
            <key>Processor</key>
            <string>FileMover</string>
            <key>Arguments</key>
            <dict>
               <key>source</key>
               <string>%RECIPE_CACHE_DIR%/pkgroot/Scripts</string>
               <key>target</key>
               <string>%RECIPE_CACHE_DIR%/Scripts</string>
            </dict>
         </dict>
         <dict>
            <key>Processor</key>
            <string>PkgCopier</string>
            <key>Arguments</key>
            <dict>
               <key>source_pkg</key>
               <string>%pathname%</string>
               <key>pkg_path</key>
               <string>%RECIPE_CACHE_DIR%/Scripts/GlobalProtect.pkg</string>
            </dict>
         </dict>
         <dict>
            <key>Processor</key>
            <string>FileCreator</string>
            <key>Arguments</key>
            <dict>
               <key>file_path</key>
               <string>%RECIPE_CACHE_DIR%/Scripts/uninstall_global_protect.xml</string>
               <key>file_mode</key>
               <string>0755</string>
               <key>file_content</key>
               <string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
&lt;array&gt;
           &lt;dict&gt;
                  &lt;key&gt;attributeSetting&lt;/key&gt;
                  &lt;integer&gt;1&lt;/integer&gt;
                  &lt;key&gt;choiceAttribute&lt;/key&gt;
                  &lt;string&gt;selected&lt;/string&gt;
                  &lt;key&gt;choiceIdentifier&lt;/key&gt;
                  &lt;string&gt;second&lt;/string&gt;
           &lt;/dict&gt;
           &lt;dict&gt;
                  &lt;key&gt;attributeSetting&lt;/key&gt;
                  &lt;integer&gt;1&lt;/integer&gt;
                  &lt;key&gt;choiceAttribute&lt;/key&gt;
                  &lt;string&gt;selected&lt;/string&gt;
                  &lt;key&gt;choiceIdentifier&lt;/key&gt;
                  &lt;string&gt;com.paloaltonetworks.globalprotect.uninstall.pkg&lt;/string&gt;
            &lt;/dict&gt;
&lt;/array&gt;
&lt;/plist&gt;</string>
            </dict>
         </dict>
         <dict>
            <key>Processor</key>
            <string>FileCreator</string>
            <key>Arguments</key>
            <dict>
               <key>file_path</key>
               <string>%RECIPE_CACHE_DIR%/Scripts/preinstall</string>
               <key>file_mode</key>
               <string>0755</string>
               <key>file_content</key>
               <string>#!/bin/bash

PKG="${0%/*}/GlobalProtect.pkg"
ChoiceChangesXMLFile="${0%/*}/uninstall_global_protect.xml"
ERROR=0

if [[ -f "$PKG" ]]; then
	
	/usr/sbin/installer -pkg "$PKG" -applyChoiceChangesXML "$ChoiceChangesXMLFile" -target "$3"
	
	if [[ $? -ne 0 ]]; then
		/usr/bin/logger -t "SAPCorp: ${0##*/}" "ERROR! Installation of package $PKG failed"
		ERROR=1
	fi
	
else
	/usr/bin/logger -t "SAPCorp: ${0##*/}" "ERROR! Package $PKG not found"
	ERROR=1
fi

exit $ERROR</string>
            </dict>
         </dict>
                  <dict>
                     <key>Processor</key>
                     <string>FileCreator</string>
                     <key>Arguments</key>
                     <dict>
                        <key>file_path</key>
                        <string>%RECIPE_CACHE_DIR%/Scripts/postinstall</string>
                        <key>file_mode</key>
                        <string>0755</string>
                        <key>file_content</key>
                        <string>#!/bin/bash

# SAPCorp_GlobalProtect_Uninstall.sh, 0.1.0
# (c) 2023, SAP SE (Rich Trouton &lt;rich.trouton@sap.com&gt;)

# Uninstalls Palo Alto GlobalProtect

# Latest change:
# 2023/11/06, Rich Trouton &lt;rich.trouton@sap.com&gt;

# Run the GlobalProtect uninstaller if available.

if [[ -x &quot;/Applications/GlobalProtect.app/Contents/Resources/uninstall_gp.sh&quot; ]]; then
	&quot;/Applications/GlobalProtect.app/Contents/Resources/uninstall_gp.sh&quot;
fi

# Run the Global Protect DEM agent uninstaller if available.

if [[ -x &quot;/Library/Application Support/PaloAltoNetworks/DEM/uninstall_agents.sh&quot; ]]; then
	&quot;/Library/Application Support/PaloAltoNetworks/DEM/uninstall_agents.sh&quot;
fi

# Unload the GlobalProtect LaunchAgents for the current user.

currentUser=$(/bin/ls -l /dev/console | /usr/bin/awk &apos;{ print $3 }&apos;)
if [[ -n &quot;$currentUser&quot; &amp;&amp; &quot;$currentUser&quot; != &quot;root&quot; ]]; then
	/bin/launchctl bootout gui/$(/usr/bin/id -u &quot;$currentUser&quot;) /Library/LaunchAgents/com.paloaltonetworks.*
fi

# Unload the GlobalProtect LaunchDaemons.

/bin/launchctl bootout system /Library/LaunchDaemons/com.paloaltonetworks.*

# Quit the currently running GlobalProtect processes

/usr/bin/killall &quot;PanGPS&quot; &quot;GlobalProtect&quot;

# Remove any existing GlobalProtect files

/bin/rm -rf &quot;/Library/LaunchAgents/&quot;com.paloaltonetworks.gp.* \
			&quot;/Library/LaunchDaemons/&quot;com.paloaltonetworks.gp.* \
			&quot;/Library/Application Support/PaloAltoNetworks&quot; \
			&quot;/Library/Caches/PaloAltoNetworks&quot; \
			&quot;/Library/Logs/PaloAltoNetworks&quot; \
			&quot;/private/var/root/Library/Caches/com.paloaltonetworks.DemUpdateService&quot; \
			&quot;/private/var/root/Library/HTTPStorages/com.paloaltonetworks.DemUpdateService&quot; \
			&quot;/private/var/root/Library/Preferences/com.paloaltonetworks.DemUpdateService.plist&quot; \
			&quot;/Library/Logs/PaloAltoNetworks/GlobalProtect&quot; \
			&quot;/Applications/GlobalProtect.app&quot; \
			&quot;/Applications/Palo Alto Networks DEM.app&quot; \
			&quot;/Library/Security/SecurityAgentPlugins/gplogin.bundle&quot; \
			&quot;/Library/Preferences/&quot;com.paloaltonetworks.GlobalProtect* \
			&quot;/Library/Preferences/&quot;PanGPS* \
			&quot;/Library/Application Support/JAMF/Receipts/PaloAlto_GlobalProtect_&quot;*.pkg \
			&quot;/Library/Application Support/JAMF/Receipts/SAPCorp_PaloAlto_GlobalProtect_Uninstaller_&quot;*.pkg
			
localUsers=$(/usr/bin/dscl . -list /Users | /usr/bin/grep -v &quot;^_&quot;)

for userName in ${localUsers}; do

  # Get path to user&apos;s home directory

  userHome=$(/usr/bin/dscl . -read /Users/$userName NFSHomeDirectory 2&gt;/dev/null | /usr/bin/sed &apos;s/^[^\/]*//g&apos;)
  
  # Remove user-level files from users&apos; home directories
  
	if [[ -d &quot;$userHome&quot; &amp;&amp; &quot;$userHome&quot; != &quot;/var/empty&quot; ]]; then
		/bin/rm -rf &quot;$userHome/Library/Application Support/PaloAltoNetworks&quot; \
		           &quot;$userHome/Library/Caches/&quot;com.paloaltonetworks.GlobalProtect.* \
		           &quot;$userHome/Library/HTTPStorages/&quot;com.paloaltonetworks.GlobalProtect.* \
		           &quot;$userHome/Library/Logs/PaloAltoNetworks&quot; \
		           &quot;$userHome/Library/Preferences/&quot;com.paloaltonetworks.GlobalProtect* \
		           &quot;$userHome/Library/Preferences/&quot;PanGPS*
	fi
done

# Remove the _panwdem user created by GlobalProtect

if [[ -n $(/usr/bin/id _panwdem 2&gt;/dev/null) ]]; then
	/usr/sbin/sysadminctl -deleteUser _panwdem --keepHome
fi

# Forget the installer package receipts

allPackages=$(/usr/sbin/pkgutil --pkgs | /usr/bin/grep -E &quot;(com.paloaltonetworks.globalprotect|com.paloaltonetworks.dem)&quot;)
for aPackage in ${allPackages}; do
	/usr/sbin/pkgutil --forget &quot;$aPackage&quot; &gt;/dev/null 2&gt;&amp;1
done

exit 0</string>
            </dict>
         </dict>
         <dict>
            <key>Processor</key>
            <string>PkgCreator</string>
            <key>Arguments</key>
            <dict>
               <key>pkg_request</key>
               <dict>
                  <key>pkgroot</key>
                  <string>%RECIPE_CACHE_DIR%/pkgroot</string>
                  <key>pkgname</key>
                  <string>%PACKAGER%_%VENDOR%_%SOFTWARETITLE1%_%SOFTWARETITLE2%_%version%</string>
                  <key>pkgtype</key>
                  <string>flat</string>
                  <key>id</key>
                  <string>corp.sap.GlobalProtectUninstall.pkg</string>
                  <key>options</key>
                  <string>purge_ds_store</string>
                  <key>scripts</key>
                  <string>Scripts</string>
                  <key>version</key>
                  <string>%version%</string>
                 </dict>
            </dict>
         </dict>
         <dict>
            <key>Arguments</key>
            <dict>
               <key>path_list</key>
               <array>
                  <string>%RECIPE_CACHE_DIR%/pkgroot</string>
                  <string>%RECIPE_CACHE_DIR%/payload</string>
                  <string>%RECIPE_CACHE_DIR%/Scripts</string>
                  <string>%RECIPE_CACHE_DIR%/unpack</string>
                  <string>%RECIPE_CACHE_DIR%/%VENDOR%</string>
               </array>
            </dict>
            <key>Processor</key>
            <string>PathDeleter</string>
         </dict>
      </array>
   </dict>
</plist>